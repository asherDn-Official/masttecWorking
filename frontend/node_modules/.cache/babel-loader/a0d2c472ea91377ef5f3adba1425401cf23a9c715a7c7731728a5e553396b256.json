{"ast":null,"code":"var _jsxFileName = \"D:\\\\asherDn\\\\masttec\\\\masttecWorking\\\\frontend\\\\src\\\\Components\\\\7.Payroll.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"../CSS/PayrollCSS.css\";\nimport url from \"./global\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PayrollPage() {\n  _s();\n  const [employee, setEmployee] = useState([]);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedMonth, setSelectedMonth] = useState(\"\");\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear()); // Initialize with current year\n  const [holidayList, setHolidayList] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const handleMonth = async e => {\n    setSelectedMonth(e.target.value);\n  };\n  const searchfilter = async e => {\n    e.preventDefault();\n    if (searchQuery) {\n      setEmployee(prevState => prevState.filter(emp => emp.employeeName.toLowerCase().includes(searchQuery.toLowerCase()) || emp.employeeId.toString().includes(searchQuery)));\n    } else {\n      setEmployee(employee);\n    }\n  };\n  const handleYearChange = async e => {\n    setSelectedYear(e.target.value);\n  };\n  const handleMonthChange = async event => {\n    const selectedMonth = parseInt(event.target.value); // Get the selected month (1-12)\n    const currentYear = new Date().getFullYear(); // Get the current year\n\n    const filteredData = filterRecordsByMonth(attendanceData, currentYear, selectedMonth);\n\n    // Fetch employee data and then set filtered attendance\n    fetchEmployee(filteredData); // Directly use filteredData without awaiting\n  };\n  const filterRecordsByMonth = React.useCallback((data, year, month) => {\n    return data.map(({\n      employeeId,\n      records\n    }) => ({\n      employeeId,\n      records: records.filter(record => {\n        const recordDate = new Date(record.date);\n        return recordDate.getFullYear() === year && recordDate.getMonth() + 1 === month;\n      })\n    })).filter(({\n      records\n    }) => records.length > 0); // Only include employees with records\n  }, []);\n  const fetchAttendance = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(`${url}/v1/api/attendance`);\n      setAttendanceData(response.data);\n    } catch (error) {\n      handleError(\"Error fetching attendance data.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchHolidays = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get(`${url}/v1/api/attendance`);\n      setAttendanceData(response.data);\n    } catch (error) {\n      handleError(\"Error fetching attendance data.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const fetchEmployee = async filteredAttendance => {\n    try {\n      const empResponse = await axios.get(`${url}/v1/api/employees`);\n      const employeeData = empResponse.data;\n      const totalOvertimeHours = {}; // Initialize total overtime storage\n\n      const mappedEmployeeData = employeeData.map(emp => {\n        const attendanceRecord = filteredAttendance.find(att => att.employeeId === emp.employeeId);\n        const presentDays = attendanceRecord ? attendanceRecord.records.filter(rec => rec.status === \"Present\").length : 0;\n        const absentDays = attendanceRecord ? attendanceRecord.records.filter(rec => rec.status === \"Absent\").length : 0;\n        const unpaidLeave = attendanceRecord ? attendanceRecord.records.filter(rec => rec.status === \"Up-Paid Leave\").length : 0;\n        const salaryPerHr = Math.round(emp.salary / (30 * 8)) || 0; // Hourly rate calculation\n        const basicSalary = Math.round(salaryPerHr * presentDays * 8) / 2 || 0; // Adjusted for present days\n        const houseRent = Math.round(salaryPerHr * presentDays * 8) / 4 || 0; // Adjusted for present days\n        let totalOT1Minutes = 0; // Overtime for Present status\n        let totalOT2Minutes = 0; // Overtime for Sunday/Holiday status\n\n        // Calculate overtime from attendance records\n        attendanceRecord === null || attendanceRecord === void 0 ? void 0 : attendanceRecord.records.forEach(record => {\n          const punchIn = new Date(record.punchIn);\n          const punchOut = new Date(record.punchOut);\n          if (punchIn && punchOut && punchOut > punchIn) {\n            const diffInMinutes = Math.floor((punchOut - punchIn) / (1000 * 60));\n            const excessMinutes = Math.max(0, diffInMinutes - 8 * 60); // Check for overtime\n\n            // Assign overtime to the correct category based on the status\n            if (record.status === \"Present\") {\n              totalOT1Minutes += excessMinutes; // OT1 for Present\n            } else if (record.status === \"Sunday\" ||\n            // Check if it's Sunday\n            record.date.includes(holidayList) // Or a holiday\n            ) {\n              totalOT2Minutes += excessMinutes; // OT2 for Sunday/Holiday\n            }\n          }\n        });\n\n        // Convert overtime minutes to hours and minutes\n        const totalOT1Hours = Math.floor(totalOT1Minutes / 60);\n        const totalOT1RemainderMinutes = totalOT1Minutes % 60;\n        const totalOT2Hours = Math.floor(totalOT2Minutes / 60);\n        const totalOT2RemainderMinutes = totalOT2Minutes % 60;\n\n        // Store the overtime hours for both OT1 and OT2\n        totalOvertimeHours[emp.employeeId] = {\n          OT1: {\n            hours: totalOT1Hours,\n            minutes: totalOT1RemainderMinutes\n          },\n          OT2: {\n            hours: totalOT2Hours,\n            minutes: totalOT2RemainderMinutes\n          }\n        };\n\n        // Convert OT1 and OT2 to decimal hours\n        const ot1Decimal = totalOT1Hours + totalOT1RemainderMinutes / 60;\n        const ot2Decimal = totalOT2Hours + totalOT2RemainderMinutes / 60;\n\n        // Calculate OT1 and OT2 amounts with the respective multipliers\n        const ot1Amount = Math.round(ot1Decimal * salaryPerHr * 1.25); // OT1 at 1.25x\n        const ot2Amount = Math.round(ot2Decimal * salaryPerHr * 1.75); // OT2 at 1.75x\n\n        // Calculate total salary and payments (automatically interlinked)\n        const empSalary = basicSalary + houseRent + ot1Amount + ot2Amount - Number(emp.epf) - Number(emp.esic);\n        const payOn5th = basicSalary + houseRent - Number(emp.epf) - Number(emp.esic);\n        const payOn20th = ot1Amount + ot2Amount;\n        const productionLossAmount = unpaidLeave * salaryPerHr * 8;\n        return {\n          employeeName: emp.employeeName || \"\",\n          employeePicture: emp.employeePicture || \"\",\n          employeeDesignation: emp.designation || \"\",\n          employeeEmail: emp.mailId || \"\",\n          employeeDepartment: emp.department || \"\",\n          employeeId: emp.employeeId || \"\",\n          employeeMobileNumber: emp.mobileNumber || \"\",\n          employeeAadhaarNo: emp.aadhaarNo || \"\",\n          employeePANNumber: emp.PANNumber || \"\",\n          employeeESICId: emp.esicId || \"\",\n          employeeEPFId: emp.epfId || \"\",\n          employeeUANNo: emp.UANNo || \"\",\n          employeePerHrSalary: salaryPerHr || 0,\n          employeePresentDays: presentDays || 0,\n          employeeAbsentDays: absentDays || 0,\n          employeeBasicSalary: basicSalary || 0,\n          employeeHouseRent: houseRent || 0,\n          employeeEPF: emp.epf || 0,\n          employeeESIC: emp.esic || 0,\n          employeeIncentives: emp.employeeIncentives || 0,\n          employeeAllowances: emp.employeeAllowances || 0,\n          employeeAdvance: emp.employeeAdvance || 0,\n          employeePLoss: unpaidLeave || 0,\n          employeePLossAmount: productionLossAmount || 0,\n          employeeOT1Days: ot1Decimal || 0,\n          // OT1 in decimal\n          employeeOT1Amount: ot1Amount || 0,\n          employeeOT2Days: ot2Decimal || 0,\n          // OT2 in decimal\n          employeeOT2Amount: ot2Amount || 0,\n          salary: emp.salary || 0,\n          employeeHoldOT: emp.employeeHoldOT || 0,\n          payOn5th: payOn5th > 0 ? payOn5th : 0 || 0,\n          // Calculated pay on 5th (without overtime)\n          payOn20th: payOn20th > 0 ? payOn20th : 0 || 0,\n          // Calculated pay on 20th (with overtime)\n          empSalary: empSalary > 0 ? empSalary : 0 || 0,\n          // Total salary (with overtime)\n          empBalance: emp.empBalance || 0,\n          totalOT1: `${totalOT1Hours} hrs ${totalOT1RemainderMinutes} mins`,\n          // OT1 in time format\n          totalOT2: `${totalOT2Hours} hrs ${totalOT2RemainderMinutes} mins` // OT2 in time format\n        };\n      });\n      setEmployee(mappedEmployeeData);\n      console.log(\"employee : \", employee);\n    } catch (error) {\n      console.error(\"Error fetching employee data:\", error);\n      setError(\"Error fetching employee data.\");\n      setTimeout(() => setError(\"\"), 5000);\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      await fetchAttendance();\n      await fetchEmployee(attendanceData);\n      await fetchHolidays();\n    };\n    fetchData();\n  }, []);\n  const handleError = message => {\n    setError(message);\n    setTimeout(() => setError(\"\"), 5000);\n  };\n  const calculateFields = employee => {\n    const salaryPerHr = employee.employeePerHrSalary;\n    const presentDays = employee.employeePresentDays;\n    const advance = employee.employeeAdvance;\n    const holdOT = employee.employeeHoldOT;\n    const productionLossAmount = employee.employeePLoss * salaryPerHr * 8 || 0;\n    const basicSalary = Math.round(salaryPerHr * presentDays * 8) / 2 || 0;\n    const houseRent = Math.round(salaryPerHr * presentDays * 8) / 4 || 0;\n    const ot1Amount = Math.round(employee.employeeOT1Days * salaryPerHr * 1.25) || 0;\n    const ot2Amount = Math.round(employee.employeeOT2Days * salaryPerHr * 1.75) || 0;\n    const totalSalary = basicSalary + houseRent + Number(employee.employeeIncentives) + Number(employee.employeeAllowances) - Number(employee.employeeESIC) - Number(employee.employeeEPF) + Number(advance) + ot1Amount + ot2Amount - holdOT;\n    const payOn5th = basicSalary + houseRent + Number(employee.employeeIncentives) + Number(employee.employeeAllowances) - Number(employee.employeeESIC) - Number(employee.employeeEPF) + Number(advance);\n    const payOn20th = ot1Amount + ot2Amount - holdOT;\n    return {\n      employeeBasicSalary: basicSalary,\n      employeeHouseRent: houseRent,\n      employeeOT1Amount: ot1Amount,\n      employeeOT2Amount: ot2Amount,\n      employeePLossAmount: productionLossAmount,\n      empSalary: totalSalary > 0 ? totalSalary : 0,\n      payOn5th: payOn5th > 0 ? payOn5th : 0,\n      payOn20th: payOn20th > 0 ? payOn20th : 0,\n      empBalance: holdOT\n    };\n  };\n  const handleChange = (e, id, field) => {\n    const {\n      value\n    } = e.target;\n    setEmployee(prevData => prevData.map(emp => {\n      if (emp.employeeId === id) {\n        const updatedEmp = {\n          ...emp,\n          [field]: value\n        };\n\n        // Calculate fields based on the updated employee data\n        const calculatedFields = calculateFields(updatedEmp);\n\n        // Update the employee's fields\n        return {\n          ...updatedEmp,\n          ...calculatedFields\n        };\n      }\n      return emp;\n    }));\n  };\n  const sendEmployeeData = async employeebase => {\n    try {\n      if (!employeebase || typeof employeebase !== \"object\") {\n        alert(\"Employee data is missing or invalid.\");\n        return;\n      }\n      if (!employeebase.employeeEmail) {\n        alert(\"Employee email is required.\");\n        return;\n      }\n\n      // Prepare the payload\n      const payload = {\n        employeeData: employeebase,\n        email: employeebase.employeeEmail,\n        month: selectedMonth,\n        year: selectedYear\n      };\n\n      // Send the request\n      const response = await axios.post(`${url}/v1/api/payroll`, payload, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n\n      // Check the response status\n      if ([200, 201].includes(response.status)) {\n        return {\n          success: true,\n          message: \"Employee data sent successfully!\"\n        };\n      } else {\n        return {\n          success: false,\n          message: \"Failed to send employee data.\"\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Error sending employee data:\", error);\n      const errorMsg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"An error occurred while sending employee data.\";\n      return {\n        success: false,\n        message: errorMsg\n      };\n    }\n  };\n  const handleSendAllEmployees = async e => {\n    e.preventDefault();\n    try {\n      // Validate input fields\n      if (!selectedMonth || !selectedYear) {\n        alert(\"Please select both month and year.\");\n        return;\n      }\n\n      // Send data for all employees concurrently\n      const results = await Promise.all(employee.map(emp => sendEmployeeData(emp)));\n\n      // Check results for failures\n      const failed = results.filter(result => !result.success);\n      if (failed.length > 0) {\n        console.warn(`Failed to send data for ${failed.length} employee(s):`, failed.map(result => result.message));\n        alert(`Failed to send data for ${failed.length} employee(s).`);\n      } else {\n        alert(\"Data successfully sent to all employees!\");\n      }\n    } catch (error) {\n      console.error(\"Error sending employee data:\", error);\n      alert(\"An unexpected error occurred while sending employee data. Please try again.\");\n    }\n  };\n  console.log(\"attendance : \", attendanceData);\n  const fields = [{\n    label: \"Present\",\n    field: \"employeePresentDays\"\n  }, {\n    label: \"Absent\",\n    field: \"employeeAbsentDays\"\n  }, {\n    label: \"Basic\",\n    field: \"employeeBasicSalary\"\n  }, {\n    label: \"House Rent\",\n    field: \"employeeHouseRent\"\n  }, {\n    label: \"EPF\",\n    field: \"employeeEPF\"\n  }, {\n    label: \"ESIC\",\n    field: \"employeeESIC\"\n  }, {\n    label: \"Incentives\",\n    field: \"employeeIncentives\"\n  }, {\n    label: \"Allowance\",\n    field: \"employeeAllowances\"\n  }, {\n    label: \"Advance\",\n    field: \"employeeAdvance\"\n  }, {\n    label: \"P.Loss Days\",\n    field: \"employeePLoss\"\n  }, {\n    label: \"P.Loss Amount\",\n    field: \"employeePLossAmount\"\n  }, {\n    label: \"OT 1\",\n    field: \"employeeOT1Days\"\n  }, {\n    label: \"OT 1 Amount\",\n    field: \"employeeOT1Amount\"\n  }, {\n    label: \"OT 2\",\n    field: \"employeeOT2Days\"\n  }, {\n    label: \"OT 2 Amount\",\n    field: \"employeeOT2Amount\"\n  }, {\n    label: \"Hold OT\",\n    field: \"employeeHoldOT\"\n  }, {\n    label: \"Pay on 5th\",\n    field: \"payOn5th\"\n  }, {\n    label: \"Pay on 20th\",\n    field: \"payOn20th\"\n  }, {\n    label: \"Salary\",\n    field: \"empSalary\"\n  }, {\n    label: \"Balance\",\n    field: \"empBalance\"\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ksierperki4545454\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lpieoroeroerrere\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"psioo5o4o54io5k5\",\n          children: \"Payroll Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => {\n                e.preventDefault();\n                handleMonth(e);\n                handleMonthChange(e);\n              },\n              className: \"pojejrejrerer\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"1\",\n                children: \"January\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"2\",\n                children: \"February\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"3\",\n                children: \"March\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"4\",\n                children: \"April\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"5\",\n                children: \"May\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"6\",\n                children: \"June\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"7\",\n                children: \"July\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"8\",\n                children: \"August\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"9\",\n                children: \"September\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"10\",\n                children: \"October\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"11\",\n                children: \"November\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 435,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"12\",\n                children: \"December\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedYear,\n              onChange: handleYearChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Year\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this), Array.from({\n                length: 5\n              }, (_, i) => {\n                const year = new Date().getFullYear() - i;\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: year,\n                  children: year\n                }, year, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 21\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ldijk45rrt\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overviewPayroll\",\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sldijkero454545\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sliderfk5445\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"svg1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"keofroei4o5454\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"totalEmployewgy434\",\n                  children: \"Total Employee\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"noofemplueelist34\",\n                  children: [employee.length, \" Employees\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sliderfk5445\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"svg2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"keofroei4o5454\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"totalEmployewgy434\",\n                  children: \"Total Net Pay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"noofemplueelist34\",\n                  children: [\"\\u20B9\", \" \", Math.max(employee.reduce((total, emp) => total + Number(emp.employeeBasicSalary) + Number(emp.employeeHouseRent) + Number(emp.employeeIncentives) + Number(emp.employeeAllowances) - Number(emp.employeeESIC) - Number(emp.employeeEPF) + Number(emp.employeeAdvance) + Number(emp.employeeOT1Amount) + Number(emp.employeeOT2Amount) - Number(emp.employeeHoldOT), 0), 0)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sliderfk5445\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"svg 3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"keofroei4o5454\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"totalEmployewgy434\",\n                  children: \"Total Gross Pay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"noofemplueelist34\",\n                  children: [\"\\u20B9\", \" \", employee.reduce((total, emp) => total + Number(emp.empSalary) + Number(emp.employeeEPF) + Number(emp.employeeESIC) + Number(emp.employeeAdvance) + Number(emp.employeeOT1Amount) + Number(emp.employeeOT2Amount), 0)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sliderfk5445\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"svg 4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"keofroei4o5454\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"totalEmployewgy434\",\n                  children: \"Total Deduction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"noofemplueelist34\",\n                  children: [\"\\u20B9\", \" \", employee.reduce((total, emp) => total + Number(emp.employeeEPF) + Number(emp.employeeESIC), 0)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 519,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sliderfk5445\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"svg 5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 532,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"keofroei4o5454\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"totalEmployewgy434\",\n                  children: \"Total Deduction\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"noofemplueelist34\",\n                  children: \"\\u20B9 2,00,000.00\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 535,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whgitebackgroundivsss\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"kkdkl4l34k4343443\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"employeeddtextfguh3453\",\n            children: \"Employee Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"poogp656556\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"seqarch3453455\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Search Employee\",\n                type: \"text\",\n                className: \"searchemployeepayrolldiv21\",\n                value: searchQuery,\n                onChange: e => {\n                  setSearchQuery(e.target.value);\n                  searchfilter(e);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"searchiconsvgpayroll\",\n                children: \"svg 6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 556,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"lsoi34545545\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"sharetoexportbutton\",\n                onClick: handleSendAllEmployees,\n                children: \"PayRun\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"shareiicontorxpoort\",\n                children: \"svg 7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), employee && employee.map((emp, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flexofjo4546656\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ksiskfdk54\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:4000${emp.employeePicture}`,\n                alt: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nameofthejkd\",\n              children: emp.employeeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 579,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nameofthejkd\",\n              children: emp.designation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 580,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nameofthejkd\",\n              children: [\"Emp Id - \", emp.employeeId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nameofthejkd\",\n              children: [\"Salary - \\u20B9 \", emp.salary]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"nameofthejkd\",\n              children: [\"Salary/Hr - \\u20B9 \", emp.employeePerHrSalary]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inputfLEXSHSH\",\n              children: fields.map(({\n                label,\n                field\n              }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"onekdi4545\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"lABLETTITLEII\",\n                    htmlFor: \"\",\n                    children: label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 592,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  onChange: e => handleChange(e, emp.employeeId, field),\n                  className: \"inputpayroll\",\n                  type: \"number\",\n                  value: emp[field]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 25\n                }, this)]\n              }, field, true, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 588,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 411,\n    columnNumber: 5\n  }, this);\n}\n_s(PayrollPage, \"tQSf/WlNwM9QX2gC8Nz6slWqJqQ=\");\n_c = PayrollPage;\nvar _c;\n$RefreshReg$(_c, \"PayrollPage\");","map":{"version":3,"names":["React","useEffect","useState","url","axios","jsxDEV","_jsxDEV","PayrollPage","_s","employee","setEmployee","attendanceData","setAttendanceData","error","setError","isLoading","setIsLoading","selectedMonth","setSelectedMonth","selectedYear","setSelectedYear","Date","getFullYear","holidayList","setHolidayList","searchQuery","setSearchQuery","handleMonth","e","target","value","searchfilter","preventDefault","prevState","filter","emp","employeeName","toLowerCase","includes","employeeId","toString","handleYearChange","handleMonthChange","event","parseInt","currentYear","filteredData","filterRecordsByMonth","fetchEmployee","useCallback","data","year","month","map","records","record","recordDate","date","getMonth","length","fetchAttendance","response","get","handleError","fetchHolidays","filteredAttendance","empResponse","employeeData","totalOvertimeHours","mappedEmployeeData","attendanceRecord","find","att","presentDays","rec","status","absentDays","unpaidLeave","salaryPerHr","Math","round","salary","basicSalary","houseRent","totalOT1Minutes","totalOT2Minutes","forEach","punchIn","punchOut","diffInMinutes","floor","excessMinutes","max","totalOT1Hours","totalOT1RemainderMinutes","totalOT2Hours","totalOT2RemainderMinutes","OT1","hours","minutes","OT2","ot1Decimal","ot2Decimal","ot1Amount","ot2Amount","empSalary","Number","epf","esic","payOn5th","payOn20th","productionLossAmount","employeePicture","employeeDesignation","designation","employeeEmail","mailId","employeeDepartment","department","employeeMobileNumber","mobileNumber","employeeAadhaarNo","aadhaarNo","employeePANNumber","PANNumber","employeeESICId","esicId","employeeEPFId","epfId","employeeUANNo","UANNo","employeePerHrSalary","employeePresentDays","employeeAbsentDays","employeeBasicSalary","employeeHouseRent","employeeEPF","employeeESIC","employeeIncentives","employeeAllowances","employeeAdvance","employeePLoss","employeePLossAmount","employeeOT1Days","employeeOT1Amount","employeeOT2Days","employeeOT2Amount","employeeHoldOT","empBalance","totalOT1","totalOT2","console","log","setTimeout","fetchData","message","calculateFields","advance","holdOT","totalSalary","handleChange","id","field","prevData","updatedEmp","calculatedFields","sendEmployeeData","employeebase","alert","payload","email","post","headers","success","_error$response","_error$response$data","errorMsg","handleSendAllEmployees","results","Promise","all","failed","result","warn","fields","label","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","required","Array","from","_","i","reduce","total","placeholder","type","onClick","index","src","alt","htmlFor","_c","$RefreshReg$"],"sources":["D:/asherDn/masttec/masttecWorking/frontend/src/Components/7.Payroll.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"../CSS/PayrollCSS.css\";\r\nimport url from \"./global\";\r\nimport axios from \"axios\";\r\n\r\nexport default function PayrollPage() {\r\n  const [employee, setEmployee] = useState([]);\r\n  const [attendanceData, setAttendanceData] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [selectedMonth, setSelectedMonth] = useState(\"\");\r\n  const [selectedYear, setSelectedYear] = useState(new Date().getFullYear()); // Initialize with current year\r\n  const [holidayList, setHolidayList] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const handleMonth = async (e) => {\r\n    setSelectedMonth(e.target.value);\r\n  };\r\n  const searchfilter = async (e) => {\r\n    e.preventDefault();\r\n    if (searchQuery) {\r\n      setEmployee((prevState) =>\r\n        prevState.filter(\r\n          (emp) =>\r\n            emp.employeeName\r\n              .toLowerCase()\r\n              .includes(searchQuery.toLowerCase()) ||\r\n            emp.employeeId.toString().includes(searchQuery)\r\n        )\r\n      );\r\n    } else {\r\n      setEmployee(employee);\r\n    }\r\n  };\r\n  const handleYearChange = async (e) => {\r\n    setSelectedYear(e.target.value);\r\n  };\r\n  const handleMonthChange = async (event) => {\r\n    const selectedMonth = parseInt(event.target.value); // Get the selected month (1-12)\r\n    const currentYear = new Date().getFullYear(); // Get the current year\r\n\r\n    const filteredData = filterRecordsByMonth(\r\n      attendanceData,\r\n      currentYear,\r\n      selectedMonth\r\n    );\r\n\r\n    // Fetch employee data and then set filtered attendance\r\n    fetchEmployee(filteredData); // Directly use filteredData without awaiting\r\n  };\r\n\r\n  const filterRecordsByMonth = React.useCallback((data, year, month) => {\r\n    return data\r\n      .map(({ employeeId, records }) => ({\r\n        employeeId,\r\n        records: records.filter((record) => {\r\n          const recordDate = new Date(record.date);\r\n          return (\r\n            recordDate.getFullYear() === year &&\r\n            recordDate.getMonth() + 1 === month\r\n          );\r\n        }),\r\n      }))\r\n      .filter(({ records }) => records.length > 0); // Only include employees with records\r\n  }, []);\r\n\r\n  const fetchAttendance = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.get(`${url}/v1/api/attendance`);\r\n      setAttendanceData(response.data);\r\n    } catch (error) {\r\n      handleError(\"Error fetching attendance data.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  const fetchHolidays = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const response = await axios.get(`${url}/v1/api/attendance`);\r\n      setAttendanceData(response.data);\r\n    } catch (error) {\r\n      handleError(\"Error fetching attendance data.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  const fetchEmployee = async (filteredAttendance) => {\r\n    try {\r\n      const empResponse = await axios.get(`${url}/v1/api/employees`);\r\n      const employeeData = empResponse.data;\r\n\r\n      const totalOvertimeHours = {}; // Initialize total overtime storage\r\n\r\n      const mappedEmployeeData = employeeData.map((emp) => {\r\n        const attendanceRecord = filteredAttendance.find(\r\n          (att) => att.employeeId === emp.employeeId\r\n        );\r\n\r\n        const presentDays = attendanceRecord\r\n          ? attendanceRecord.records.filter((rec) => rec.status === \"Present\")\r\n              .length\r\n          : 0;\r\n        const absentDays = attendanceRecord\r\n          ? attendanceRecord.records.filter((rec) => rec.status === \"Absent\")\r\n              .length\r\n          : 0;\r\n        const unpaidLeave = attendanceRecord\r\n          ? attendanceRecord.records.filter(\r\n              (rec) => rec.status === \"Up-Paid Leave\"\r\n            ).length\r\n          : 0;\r\n        const salaryPerHr = Math.round(emp.salary / (30 * 8)) || 0; // Hourly rate calculation\r\n        const basicSalary = Math.round(salaryPerHr * presentDays * 8) / 2 || 0; // Adjusted for present days\r\n        const houseRent = Math.round(salaryPerHr * presentDays * 8) / 4 || 0; // Adjusted for present days\r\n        let totalOT1Minutes = 0; // Overtime for Present status\r\n        let totalOT2Minutes = 0; // Overtime for Sunday/Holiday status\r\n\r\n        // Calculate overtime from attendance records\r\n        attendanceRecord?.records.forEach((record) => {\r\n          const punchIn = new Date(record.punchIn);\r\n          const punchOut = new Date(record.punchOut);\r\n\r\n          if (punchIn && punchOut && punchOut > punchIn) {\r\n            const diffInMinutes = Math.floor(\r\n              (punchOut - punchIn) / (1000 * 60)\r\n            );\r\n            const excessMinutes = Math.max(0, diffInMinutes - 8 * 60); // Check for overtime\r\n\r\n            // Assign overtime to the correct category based on the status\r\n            if (record.status === \"Present\") {\r\n              totalOT1Minutes += excessMinutes; // OT1 for Present\r\n            } else if (\r\n              record.status === \"Sunday\" || // Check if it's Sunday\r\n              record.date.includes(holidayList) // Or a holiday\r\n            ) {\r\n              totalOT2Minutes += excessMinutes; // OT2 for Sunday/Holiday\r\n            }\r\n          }\r\n        });\r\n\r\n        // Convert overtime minutes to hours and minutes\r\n        const totalOT1Hours = Math.floor(totalOT1Minutes / 60);\r\n        const totalOT1RemainderMinutes = totalOT1Minutes % 60;\r\n\r\n        const totalOT2Hours = Math.floor(totalOT2Minutes / 60);\r\n        const totalOT2RemainderMinutes = totalOT2Minutes % 60;\r\n\r\n        // Store the overtime hours for both OT1 and OT2\r\n        totalOvertimeHours[emp.employeeId] = {\r\n          OT1: {\r\n            hours: totalOT1Hours,\r\n            minutes: totalOT1RemainderMinutes,\r\n          },\r\n          OT2: {\r\n            hours: totalOT2Hours,\r\n            minutes: totalOT2RemainderMinutes,\r\n          },\r\n        };\r\n\r\n        // Convert OT1 and OT2 to decimal hours\r\n        const ot1Decimal = totalOT1Hours + totalOT1RemainderMinutes / 60;\r\n        const ot2Decimal = totalOT2Hours + totalOT2RemainderMinutes / 60;\r\n\r\n        // Calculate OT1 and OT2 amounts with the respective multipliers\r\n        const ot1Amount = Math.round(ot1Decimal * salaryPerHr * 1.25); // OT1 at 1.25x\r\n        const ot2Amount = Math.round(ot2Decimal * salaryPerHr * 1.75); // OT2 at 1.75x\r\n\r\n        // Calculate total salary and payments (automatically interlinked)\r\n        const empSalary =\r\n          basicSalary +\r\n          houseRent +\r\n          ot1Amount +\r\n          ot2Amount -\r\n          Number(emp.epf) -\r\n          Number(emp.esic);\r\n        const payOn5th =\r\n          basicSalary + houseRent - Number(emp.epf) - Number(emp.esic);\r\n        const payOn20th = ot1Amount + ot2Amount;\r\n        const productionLossAmount = unpaidLeave * salaryPerHr * 8;\r\n        return {\r\n          employeeName: emp.employeeName || \"\",\r\n          employeePicture: emp.employeePicture || \"\",\r\n          employeeDesignation: emp.designation || \"\",\r\n          employeeEmail: emp.mailId || \"\",\r\n          employeeDepartment: emp.department || \"\",\r\n          employeeId: emp.employeeId || \"\",\r\n          employeeMobileNumber: emp.mobileNumber || \"\",\r\n          employeeAadhaarNo: emp.aadhaarNo || \"\",\r\n          employeePANNumber: emp.PANNumber || \"\",\r\n          employeeESICId: emp.esicId || \"\",\r\n          employeeEPFId: emp.epfId || \"\",\r\n          employeeUANNo: emp.UANNo || \"\",\r\n          employeePerHrSalary: salaryPerHr || 0,\r\n          employeePresentDays: presentDays || 0,\r\n          employeeAbsentDays: absentDays || 0,\r\n          employeeBasicSalary: basicSalary || 0,\r\n          employeeHouseRent: houseRent || 0,\r\n          employeeEPF: emp.epf || 0,\r\n          employeeESIC: emp.esic || 0,\r\n          employeeIncentives: emp.employeeIncentives || 0,\r\n          employeeAllowances: emp.employeeAllowances || 0,\r\n          employeeAdvance: emp.employeeAdvance || 0,\r\n          employeePLoss: unpaidLeave || 0,\r\n          employeePLossAmount: productionLossAmount || 0,\r\n          employeeOT1Days: ot1Decimal || 0, // OT1 in decimal\r\n          employeeOT1Amount: ot1Amount || 0,\r\n          employeeOT2Days: ot2Decimal || 0, // OT2 in decimal\r\n          employeeOT2Amount: ot2Amount || 0,\r\n          salary: emp.salary || 0,\r\n          employeeHoldOT: emp.employeeHoldOT || 0,\r\n          payOn5th: payOn5th > 0 ? payOn5th : 0 || 0, // Calculated pay on 5th (without overtime)\r\n          payOn20th: payOn20th > 0 ? payOn20th : 0 || 0, // Calculated pay on 20th (with overtime)\r\n          empSalary: empSalary > 0 ? empSalary : 0 || 0, // Total salary (with overtime)\r\n          empBalance: emp.empBalance || 0,\r\n          totalOT1: `${totalOT1Hours} hrs ${totalOT1RemainderMinutes} mins`, // OT1 in time format\r\n          totalOT2: `${totalOT2Hours} hrs ${totalOT2RemainderMinutes} mins`, // OT2 in time format\r\n        };\r\n      });\r\n\r\n      setEmployee(mappedEmployeeData);\r\n      console.log(\"employee : \", employee);\r\n    } catch (error) {\r\n      console.error(\"Error fetching employee data:\", error);\r\n      setError(\"Error fetching employee data.\");\r\n      setTimeout(() => setError(\"\"), 5000);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetchAttendance();\r\n      await fetchEmployee(attendanceData);\r\n      await fetchHolidays();\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const handleError = (message) => {\r\n    setError(message);\r\n    setTimeout(() => setError(\"\"), 5000);\r\n  };\r\n\r\n  const calculateFields = (employee) => {\r\n    const salaryPerHr = employee.employeePerHrSalary;\r\n    const presentDays = employee.employeePresentDays;\r\n    const advance = employee.employeeAdvance;\r\n    const holdOT = employee.employeeHoldOT;\r\n    const productionLossAmount = employee.employeePLoss * salaryPerHr * 8 || 0;\r\n\r\n    const basicSalary = Math.round(salaryPerHr * presentDays * 8) / 2 || 0;\r\n    const houseRent = Math.round(salaryPerHr * presentDays * 8) / 4 || 0;\r\n\r\n    const ot1Amount =\r\n      Math.round(employee.employeeOT1Days * salaryPerHr * 1.25) || 0;\r\n    const ot2Amount =\r\n      Math.round(employee.employeeOT2Days * salaryPerHr * 1.75) || 0;\r\n\r\n    const totalSalary =\r\n      basicSalary +\r\n      houseRent +\r\n      Number(employee.employeeIncentives) +\r\n      Number(employee.employeeAllowances) -\r\n      Number(employee.employeeESIC) -\r\n      Number(employee.employeeEPF) +\r\n      Number(advance) +\r\n      ot1Amount +\r\n      ot2Amount -\r\n      holdOT;\r\n\r\n    const payOn5th =\r\n      basicSalary +\r\n      houseRent +\r\n      Number(employee.employeeIncentives) +\r\n      Number(employee.employeeAllowances) -\r\n      Number(employee.employeeESIC) -\r\n      Number(employee.employeeEPF) +\r\n      Number(advance);\r\n    const payOn20th = ot1Amount + ot2Amount - holdOT;\r\n\r\n    return {\r\n      employeeBasicSalary: basicSalary,\r\n      employeeHouseRent: houseRent,\r\n      employeeOT1Amount: ot1Amount,\r\n      employeeOT2Amount: ot2Amount,\r\n      employeePLossAmount: productionLossAmount,\r\n      empSalary: totalSalary > 0 ? totalSalary : 0,\r\n      payOn5th: payOn5th > 0 ? payOn5th : 0,\r\n      payOn20th: payOn20th > 0 ? payOn20th : 0,\r\n      empBalance: holdOT,\r\n    };\r\n  };\r\n\r\n  const handleChange = (e, id, field) => {\r\n    const { value } = e.target;\r\n\r\n    setEmployee((prevData) =>\r\n      prevData.map((emp) => {\r\n        if (emp.employeeId === id) {\r\n          const updatedEmp = { ...emp, [field]: value };\r\n\r\n          // Calculate fields based on the updated employee data\r\n          const calculatedFields = calculateFields(updatedEmp);\r\n\r\n          // Update the employee's fields\r\n          return { ...updatedEmp, ...calculatedFields };\r\n        }\r\n        return emp;\r\n      })\r\n    );\r\n  };\r\n\r\n  const sendEmployeeData = async (employeebase) => {\r\n    try {\r\n      if (!employeebase || typeof employeebase !== \"object\") {\r\n        alert(\"Employee data is missing or invalid.\");\r\n        return;\r\n      }\r\n\r\n      if (!employeebase.employeeEmail) {\r\n        alert(\"Employee email is required.\");\r\n        return;\r\n      }\r\n\r\n      // Prepare the payload\r\n      const payload = {\r\n        employeeData: employeebase,\r\n        email: employeebase.employeeEmail,\r\n        month: selectedMonth,\r\n        year: selectedYear,\r\n      };\r\n\r\n      // Send the request\r\n      const response = await axios.post(`${url}/v1/api/payroll`, payload, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n\r\n      // Check the response status\r\n      if ([200, 201].includes(response.status)) {\r\n        return { success: true, message: \"Employee data sent successfully!\" };\r\n      } else {\r\n        return { success: false, message: \"Failed to send employee data.\" };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending employee data:\", error);\r\n      const errorMsg =\r\n        error.response?.data?.message ||\r\n        \"An error occurred while sending employee data.\";\r\n      return { success: false, message: errorMsg };\r\n    }\r\n  };\r\n\r\n  const handleSendAllEmployees = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      // Validate input fields\r\n      if (!selectedMonth || !selectedYear) {\r\n        alert(\"Please select both month and year.\");\r\n        return;\r\n      }\r\n\r\n      // Send data for all employees concurrently\r\n      const results = await Promise.all(\r\n        employee.map((emp) => sendEmployeeData(emp))\r\n      );\r\n\r\n      // Check results for failures\r\n      const failed = results.filter((result) => !result.success);\r\n\r\n      if (failed.length > 0) {\r\n        console.warn(\r\n          `Failed to send data for ${failed.length} employee(s):`,\r\n          failed.map((result) => result.message)\r\n        );\r\n        alert(`Failed to send data for ${failed.length} employee(s).`);\r\n      } else {\r\n        alert(\"Data successfully sent to all employees!\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending employee data:\", error);\r\n      alert(\r\n        \"An unexpected error occurred while sending employee data. Please try again.\"\r\n      );\r\n    }\r\n  };\r\n\r\n  console.log(\"attendance : \", attendanceData);\r\n  const fields = [\r\n    { label: \"Present\", field: \"employeePresentDays\" },\r\n    { label: \"Absent\", field: \"employeeAbsentDays\" },\r\n    { label: \"Basic\", field: \"employeeBasicSalary\" },\r\n    { label: \"House Rent\", field: \"employeeHouseRent\" },\r\n    { label: \"EPF\", field: \"employeeEPF\" },\r\n    { label: \"ESIC\", field: \"employeeESIC\" },\r\n    { label: \"Incentives\", field: \"employeeIncentives\" },\r\n    { label: \"Allowance\", field: \"employeeAllowances\" },\r\n    { label: \"Advance\", field: \"employeeAdvance\" },\r\n    { label: \"P.Loss Days\", field: \"employeePLoss\" },\r\n    { label: \"P.Loss Amount\", field: \"employeePLossAmount\" },\r\n    { label: \"OT 1\", field: \"employeeOT1Days\" },\r\n    { label: \"OT 1 Amount\", field: \"employeeOT1Amount\" },\r\n    { label: \"OT 2\", field: \"employeeOT2Days\" },\r\n    { label: \"OT 2 Amount\", field: \"employeeOT2Amount\" },\r\n    { label: \"Hold OT\", field: \"employeeHoldOT\" },\r\n    { label: \"Pay on 5th\", field: \"payOn5th\" },\r\n    { label: \"Pay on 20th\", field: \"payOn20th\" },\r\n    { label: \"Salary\", field: \"empSalary\" },\r\n    { label: \"Balance\", field: \"empBalance\" },\r\n  ];\r\n  return (\r\n    <div>\r\n      <div className=\"ksierperki4545454\">\r\n        <div className=\"lpieoroeroerrere\">\r\n          <div className=\"psioo5o4o54io5k5\">Payroll Details</div>\r\n          <div>\r\n            <div>\r\n              <select\r\n                onChange={(e) => {\r\n                  e.preventDefault();\r\n                  handleMonth(e);\r\n                  handleMonthChange(e);\r\n                }}\r\n                className=\"pojejrejrerer\"\r\n              >\r\n                <option value=\"1\">January</option>\r\n                <option value=\"2\">February</option>\r\n                <option value=\"3\">March</option>\r\n                <option value=\"4\">April</option>\r\n                <option value=\"5\">May</option>\r\n                <option value=\"6\">June</option>\r\n                <option value=\"7\">July</option>\r\n                <option value=\"8\">August</option>\r\n                <option value=\"9\">September</option>\r\n                <option value=\"10\">October</option>\r\n                <option value=\"11\">November</option>\r\n                <option value=\"12\">December</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <select value={selectedYear} onChange={handleYearChange} required>\r\n                <option value=\"\">Select Year</option>\r\n                {Array.from({ length: 5 }, (_, i) => {\r\n                  const year = new Date().getFullYear() - i;\r\n                  return (\r\n                    <option key={year} value={year}>\r\n                      {year}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"ldijk45rrt\">\r\n          <div className=\"overviewPayroll\">Overview</div>\r\n          <div>\r\n            <div className=\"sldijkero454545\">\r\n              <div className=\"sliderfk5445\">\r\n                <div>svg1</div>\r\n                <div className=\"keofroei4o5454\">\r\n                  <div className=\"totalEmployewgy434\">Total Employee</div>\r\n                  <div className=\"noofemplueelist34\">\r\n                    {employee.length} Employees\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"sliderfk5445\">\r\n                <div>svg2</div>\r\n                <div className=\"keofroei4o5454\">\r\n                  <div className=\"totalEmployewgy434\">Total Net Pay</div>\r\n                  <div className=\"noofemplueelist34\">\r\n                    ₹{\" \"}\r\n                    {Math.max(\r\n                      employee.reduce(\r\n                        (total, emp) =>\r\n                          total +\r\n                          Number(emp.employeeBasicSalary) +\r\n                          Number(emp.employeeHouseRent) +\r\n                          Number(emp.employeeIncentives) +\r\n                          Number(emp.employeeAllowances) -\r\n                          Number(emp.employeeESIC) -\r\n                          Number(emp.employeeEPF) +\r\n                          Number(emp.employeeAdvance) +\r\n                          Number(emp.employeeOT1Amount) +\r\n                          Number(emp.employeeOT2Amount) -\r\n                          Number(emp.employeeHoldOT),\r\n                        0\r\n                      ),\r\n                      0\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"sliderfk5445\">\r\n                <div>svg 3</div>\r\n                <div className=\"keofroei4o5454\">\r\n                  <div className=\"totalEmployewgy434\">Total Gross Pay</div>\r\n                  <div className=\"noofemplueelist34\">\r\n                    ₹{\" \"}\r\n                    {employee.reduce(\r\n                      (total, emp) =>\r\n                        total +\r\n                        Number(emp.empSalary) +\r\n                        Number(emp.employeeEPF) +\r\n                        Number(emp.employeeESIC) +\r\n                        Number(emp.employeeAdvance) +\r\n                        Number(emp.employeeOT1Amount) +\r\n                        Number(emp.employeeOT2Amount),\r\n                      0\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"sliderfk5445\">\r\n                <div>svg 4</div>\r\n                <div className=\"keofroei4o5454\">\r\n                  <div className=\"totalEmployewgy434\">Total Deduction</div>\r\n                  <div className=\"noofemplueelist34\">\r\n                    ₹{\" \"}\r\n                    {employee.reduce(\r\n                      (total, emp) =>\r\n                        total +\r\n                        Number(emp.employeeEPF) +\r\n                        Number(emp.employeeESIC),\r\n                      0\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"sliderfk5445\">\r\n                <div>svg 5</div>\r\n                <div className=\"keofroei4o5454\">\r\n                  <div className=\"totalEmployewgy434\">Total Deduction</div>\r\n                  <div className=\"noofemplueelist34\">₹ 2,00,000.00</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"whgitebackgroundivsss\">\r\n          <div className=\"kkdkl4l34k4343443\">\r\n            <div className=\"employeeddtextfguh3453\">Employee Details</div>\r\n            <div className=\"poogp656556\">\r\n              <div className=\"seqarch3453455\">\r\n                <input\r\n                  placeholder=\"Search Employee\"\r\n                  type=\"text\"\r\n                  className=\"searchemployeepayrolldiv21\"\r\n                  value={searchQuery}\r\n                  onChange={(e) => {\r\n                    setSearchQuery(e.target.value);\r\n                    searchfilter(e);\r\n                  }}\r\n                />\r\n                <div className=\"searchiconsvgpayroll\">svg 6</div>\r\n              </div>\r\n              <div className=\"lsoi34545545\">\r\n                <button\r\n                  className=\"sharetoexportbutton\"\r\n                  onClick={handleSendAllEmployees}\r\n                >\r\n                  PayRun\r\n                </button>\r\n                <div className=\"shareiicontorxpoort\">svg 7</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {employee &&\r\n            employee.map((emp, index) => (\r\n              <div className=\"flexofjo4546656\" key={index}>\r\n                <div className=\"ksiskfdk54\">\r\n                  <div>\r\n                    <img\r\n                      src={`http://localhost:4000${emp.employeePicture}`}\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"nameofthejkd\">{emp.employeeName}</div>\r\n                  <div className=\"nameofthejkd\">{emp.designation}</div>\r\n                  <div className=\"nameofthejkd\">Emp Id - {emp.employeeId}</div>\r\n                  <div className=\"nameofthejkd\">Salary - ₹ {emp.salary}</div>\r\n                  <div className=\"nameofthejkd\">\r\n                    Salary/Hr - ₹ {emp.employeePerHrSalary}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"inputfLEXSHSH\">\r\n                    {fields.map(({ label, field }) => (\r\n                      <div className=\"onekdi4545\" key={field}>\r\n                        <div>\r\n                          <label className=\"lABLETTITLEII\" htmlFor=\"\">\r\n                            {label}\r\n                          </label>\r\n                        </div>\r\n                        <input\r\n                          onChange={(e) =>\r\n                            handleChange(e, emp.employeeId, field)\r\n                          }\r\n                          className=\"inputpayroll\"\r\n                          type=\"number\"\r\n                          value={emp[field]}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}